name: echo
on:
  push:
    branches-ignore:
      - "wip/**"
  pull_request:
    types: [opened, reopened]
  workflow_dispatch:

jobs:
  files-changed:
    name: detect file changes
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      site-changed: ${{ steps.changes.outputs.echo }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: .github/file-filters.yml
          list-files: "json"

  sonarqube:
    name: code analysis
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: debug vars
        run: |
          echo "Github Event Name: ${{ github.event_name }}"
          echo "Site Changed: ${{ needs.files-changed.outputs.site-changed }}"

  testOnly:
    name: run tests
    needs: sonarqube
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request'}}
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: debug vars
        run: |
          echo "Github Event Name: ${{ github.event_name }}"
      - run: echo "running testOnly"

  buildOnly:
    name: run build
    needs: testOnly
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: debug vars
        run: |
          echo "Github Event Name: ${{ github.event_name }}"
      - run: echo "running buildOnly"

  test:
    name: run tests
    needs: sonarqube
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request'}}
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: debug vars
        run: |
          echo "Github Event Name: ${{ github.event_name }}"
      - run: echo "running tests"

  build:
    name: run build
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: debug vars
        run: |
          echo "Github Event Name: ${{ github.event_name }}"
      - run: echo "running build"
      - run: |
          mkdir -pv src/sites/echo/dist
          echo '{"site": "echo"}' > src/sites/echo/dist/inbound.js
      - uses: actions/upload-artifact@v4
        with:
          path: src/sites/acme/dist/inbound.js
          compression-level: 0
          if-no-files-found: error

  deploy-testing-interfaces:
    name: deploy testing interfaces
    environment: echo-test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: debug vars
        run: |
          echo "Github Event Name: ${{ github.event_name }}"
      - uses: actions/download-artifact@v4
      - run: echo "running deploy-testing-interfaces for echo-test environment"
